version: '3'

services:
    
    portainer:
        container_name: Portainer
        
        image: portainer/portainer:latest
        restart: unless-stopped
        
        networks:
            extnetwork:
                ipv4_address: 172.19.0.2

        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - /home/portainer:/data

        ports:
            - '9000:9000'


    
    
    postgres96:
        container_name: Postgres96

        image: postgres:9.6
        restart: unless-stopped

        networks:
            extnetwork:
                ipv4_address: 172.19.0.3

        volumes:
            - /home/postgresql/data:/var/lib/postgresql/data

        environment:
            POSTGRES_PASSWORD: password

        ports:
            - '5432:5432'
    
    
    
    
    nginx:
        container_name: Nginx
        
        image: nginx:latest
        restart: unless-stopped
        
        networks:
            extnetwork:
                ipv4_address: 172.19.0.5
        
        volumes:
            - /home/nginx/conf.d:/etc/nginx/conf.d
        
        ports:
            - '80:80'
            - '443:443'




    jira:
        container_name: Jira_ServiceDesk
        user: '2001:2001'

        image: atlassian/jira-servicedesk
        restart: unless-stopped

        depends_on:
            - postgres96

        networks:
            extnetwork:
                ipv4_address: 172.19.0.6

        volumes:
            - /home/jira:/var/atlassian/application-data/jira

        environment:
            - JVM_MINIMUM_MEMORY=1024m
            - JVM_MAXIMUM_MEMORY=16384m

            - ATL_PROXY_NAME=jira.cn-snm.com
            - ATL_PROXY_PORT=80

        ports:
            - '8080:8080'



    confluence:
        container_name: Confluence
        user: '2002:2002'

        image: atlassian/confluence-server:latest
        restart: unless-stopped

        depends_on:
            - postgres96

        networks:
            extnetwork:
                ipv4_address: 172.19.0.7

        volumes:
            - /home/confluence:/var/atlassian/application-data/confluence

        environment:
            - JVM_MINIMUM_MEMORY=1024m
            - JVM_MAXIMUM_MEMORY=16384m
        
            - ATL_PROXY_NAME=wiki.cn-snm.com
            - ATL_PROXY_PORT=80

        ports:
            - '8090:8090'
            - '8091:8091'



    bitbucket:
        container_name: Bitbucket
        user: '2003:2003'

        image: atlassian/bitbucket-server:latest
        restart: unless-stopped

        depends_on:
            - postgres96

        networks:
            extnetwork:
                ipv4_address: 172.19.0.8

        volumes:
            - /home/bitbucket:/var/atlassian/application-data/bitbucket

        environment:
            - JVM_MINIMUM_MEMORY=1024m
            - JVM_MAXIMUM_MEMORY=16384m
        
            - ATL_PROXY_NAME=bitbucket.cn-snm.com
            - ATL_PROXY_PORT=80

        ports:
            - '7990:7990'
            - '7999:7999'




    gitlab:
        container_name: Gitlab

        image: gitlab/gitlab-ce:latest
        restart: unless-stopped

        networks:
            extnetwork:
                ipv4_address: 172.19.0.9

        volumes:
            - /home/gitlab/config:/etc/gitlab
            - /home/gitlab/log:/var/log/gitlab
            - /home/gitlab/data:/var/opt/gitlab
        
        ports:
            - '20022:22'
            - '20080:80'
            - '20443:443'


    

    rabbitmq:
        container_name: RabbitMQ
        
        image: rabbitmq:3.8.2-management
        restart: unless-stopped

        networks:
            extnetwork:
                ipv4_address: 172.19.0.10
        
        volumes:
            - /home/rabbitmq/data:/var/lib/rabbitmq

        environment:
            - RABBITMQ_DEFAULT_USER=admin
            - RABBITMQ_DEFAULT_PASS=password

        ports:
            - '5672:5672'
            - '15672:15672'


    
    
    netdata:
        container_name: NetData
        
        image: netdata/netdata
        restart: unless-stopped

        networks:
            extnetwork:
                ipv4_address: 172.19.0.11
        
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /var/run/docker.sock:/var/run/docker.sock:ro
        
        cap_add:
          - SYS_PTRACE
        
        security_opt:
          - apparmor:unconfined

        ports:
            - '19999:19999'



    rocketchat:
        container_name: RocketChat

        image: rocketchat/rocket.chat:latest
        restart: unless-stopped
        
        networks:
            extnetwork:
                ipv4_address: 172.19.0.12

        depends_on:
            - mongo

        ports:
            - 3000:3000

        command: >
            bash -c
                "for i in `seq 1 30`; do
                     node main.js &&
                     s=$$? && break || s=$$?;
                     echo \"Tried $$i times. Waiting 5 secs...\";
                     sleep 5;
                 done; (exit $$s)"
        volumes:
            - /home/rocketchat/uploads:/app/uploads

        environment:
            - PORT=3000
            - ROOT_URL=http://localhost:3000
            - MONGO_URL=mongodb://mongo:27017/rocketchat
            - MONGO_OPLOG_URL=mongodb://mongo:27017/local
            - MAIL_URL=smtp://smtp.email
            - HTTP_PROXY=http://chat.sn.com
            - HTTPS_PROXY=http://chat.sn.com




    mongo:
        container_name: MongoDB

        image: mongo:4.0
        restart: unless-stopped

        networks:
            extnetwork:
                ipv4_address: 172.19.0.4

        volumes:
            - /home/mongo/data/db:/data/db
            - /home/mongo/data/dump:/dump

        command: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1



  
    mongo-init-replica:
        container_name: MongoDB_init

        image: mongo:4.0

        networks:
            extnetwork:
                ipv4_address: 172.19.0.13

        command: >
            bash -c
                "for i in `seq 1 30`; do
                     mongo mongo/rocketchat --eval \"
                     rs.initiate({
                     _id: 'rs0',
                     members: [ { _id: 0, host: 'localhost:27017' } ]})\" &&
                     s=$$? && break || s=$$?;
                     echo \"Tried $$i times. Waiting 5 secs...\";
                     sleep 5;
                 done; (exit $$s)"

        depends_on:
            - mongo


networks:
    extnetwork:
        driver: bridge
        ipam:
            config:
                - subnet: 172.19.0.0/16
